name: EstateKit Documents API CI

on:
  push:
    branches: 
      - main
      - develop
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
    paths:
      - 'src/backend/**'
      - '.github/workflows/ci.yml'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'src/backend/**'
      - '.github/workflows/ci.yml'
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_PATH: 'src/backend/EstateKit.Documents.Api.sln'
  DOCKER_FILE: 'src/backend/Dockerfile'
  TEST_COVERAGE_THRESHOLD: '80'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'
  DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
  DOCKER_BUILDKIT: '1'
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  MSBUILDSINGLELOADCONTEXT: '1'
  DOTNET_NOLOGO: 'true'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    environment: ci
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache-dependency-path: ${{ env.SOLUTION_PATH }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: nuget-${{ hashFiles('**/*.csproj', '**/*.props', '**/*.targets') }}
          restore-keys: |
            nuget-

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: sonar-${{ github.ref }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-${{ github.sha }}
          restore-keys: |
            docker-

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }} --verbosity normal

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore --maxcpucount:8

      - name: Run unit tests
        run: |
          dotnet test ${{ env.SOLUTION_PATH }} \
            --configuration Release \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --settings src/backend/tests/coverlet.runsettings \
            --logger "trx;LogFileName=test-results.trx" \
            --blame \
            --parallel \
            --verbosity normal

      - name: SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=estatekit
            -Dsonar.projectKey=estatekit_documents_api
            -Dsonar.coverage.exclusions=**/Program.cs,**/Startup.cs
            -Dsonar.qualitygate.wait=true

      - name: Run Snyk security scan
        uses: snyk/actions/dotnet@v3
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk-results.sarif
          command: test

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKER_FILE }}
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v2
        with:
          languages: csharp
          queries: security-extended
          ram: 6000

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: src/backend/tests/**/TestResults/*.trx
          retention-days: 14
          if-no-files-found: error

      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: src/backend/tests/**/coverage.*
          retention-days: 14
          if-no-files-found: error

      - name: Upload security reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            snyk-results.sarif
            codeql-results.sarif
          retention-days: 30
          if-no-files-found: warn

      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache