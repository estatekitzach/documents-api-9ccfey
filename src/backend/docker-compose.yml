version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ASPNETCORE_ENVIRONMENT: Production
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_COGNITO_USER_POOL_ID=${AWS_COGNITO_USER_POOL_ID}
      - AWS_COGNITO_APP_CLIENT_ID=${AWS_COGNITO_APP_CLIENT_ID}
      - AWS_KMS_KEY_ID=${AWS_KMS_KEY_ID}
      - AWS_TEXTRACT_QUEUE_URL=${AWS_TEXTRACT_QUEUE_URL}
      - REDIS_CONNECTION_STRING=redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - DOCUMENT_RETENTION_DAYS=2555
      - DOCUMENT_ARCHIVE_DAYS=90
      - ENABLE_COMPRESSION=true
      - ENABLE_ARCHIVING=true
      - LOG_LEVEL=Information
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    restart: unless-stopped
    depends_on:
      - redis

  redis:
    image: redis:alpine
    command: [
      "redis-server",
      "--appendonly yes",
      "--requirepass ${REDIS_PASSWORD}",
      "--maxmemory 1gb",
      "--maxmemory-policy allkeys-lru"
    ]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 512M
    restart: unless-stopped

  monitoring:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_LOG_LEVEL=warn
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/grafana/provisioning:/etc/grafana/provisioning
      - ./infrastructure/grafana/dashboards:/var/lib/grafana/dashboards
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      device: /data/redis
      o: bind
  grafana_data:
    driver: local
    driver_opts:
      type: none
      device: /data/grafana
      o: bind

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
    driver_opts:
      com.docker.network.bridge.name: estatekit_net
      com.docker.network.bridge.enable_icc: 'true'
      com.docker.network.bridge.enable_ip_masquerade: 'true'